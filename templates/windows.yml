steps:
  - checkout: self
    submodules: true
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
  - script: |
      cd $(Build.SourcesDirectory)
      python -m pip install aqtinstall
    displayName: 'Install aqtinstall'
  # 1
  - script: |
      cd $(Build.SourcesDirectory)
      python -m aqt install --outputdir $(Build.BinariesDirectory)\\Qt 5.14.1 windows desktop win32_msvc2017 -m qtcore qtgui qtxml qtdeclarative qtquickcontrols2
      echo "Installing Qt to $(Build.SourcesDirectory)"
    displayName: 'Install Qt 5.14.1'
  # 2
  - script: |
      cd $(Build.SourcesDirectory)
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars32.bat"
      $(Build.BinariesDirectory)\\Qt\\5.14.1\\msvc2017\\bin\\cmake.exe
    displayName: 'Run cmake'
  # 3
  - script: |
      cd $(Build.SourcesDirectory)
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars32.bat"
      nmake release
    displayName: 'Build!'
  # 4
  - script: |
      cd $(Build.SourcesDirectory)
      call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build\\vcvars32.bat"
      echo "Creating deploy directory"
      mkdir app\\deploy
      copy app\\release\\HL3.exe app\\deploy\\HL3.exe
      dir $(Build.BinariesDirectory)\\Qt\\5.14.1\\msvc2017\\bin
      echo "Running windeployqt"
      $(Build.BinariesDirectory)\\Qt\\5.14.1\\msvc2017\\bin\\windeployqt.exe --qmldir app\\src\\qml app\\deploy\\HL3.exe
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    displayName: 'Deploy'
  # 5
  - script: |
      cd $(Build.SourcesDirectory)
      set HL3DeployDir=$(Build.SourcesDirectory)\\app\\deploy
      for /f "usebackq tokens=*" %%a in (`git describe --exact-match --tags $(Build.SourceVersion)`) do set HL3Version=%%a
      iscc /Qp ci\\innosetup_script.iss"
      echo "Listing ci directory"
      dir ci
      echo "Listing ci/Output directory"
      dir "ci\\Output"
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    displayName: 'Run Innosetup'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.SourcesDirectory)\\ci\\Output\\HL3Setup.exe
      artifactName: Windows_release
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    displayName: 'Publish Release Installer'